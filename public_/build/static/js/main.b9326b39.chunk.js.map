{"version":3,"sources":["GlobalContext/Reducer.ts","GlobalContext/Contextdata.tsx","Components/MainBalance.tsx","Components/Incomeexpencebal.tsx","Components/Newtrasection.tsx","Components/Trasections.tsx","Components/Servises/FirebaseNotification.js","Components/Notification.tsx","App.tsx","index.tsx","Components/Servises/SwDevOffline.js"],"names":["Reducer","state","action","type","payload","filter","stateObj","id","trasections","Contextdata","React","createContext","ContextProvider","children","useReducer","dispatch","Provider","value","MainBalance","balance","useContext","map","Obj","amount","reduce","total","items","toFixed","className","separator","end","Incomeexpencebal","income","incObj","expence","totalincome","totalexpence","incomebal","expencebal","Newtrasection","element","useRef","useEffect","a","current","focus","useState","text","setText","setAmount","onSubmit","e","preventDefault","newTra","Math","random","abs","parseInt","ref","onChange","currentTarget","required","placeholder","onClick","Trasections","today","Date","date","getFullYear","getMonth","getDate","traObj","ind","key","event","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","messaging","FirebaseNotification","Notification","requestPermission","then","permission","console","log","getToken","currentToken","prompt","catch","err","useStyles","makeStyles","theme","root","margin","spacing","btn","fontWeight","fontSize","classes","Button","variant","color","App","ReactDOM","render","StrictMode","document","getElementById","swDev","process","navigator","serviceWorker","register","result","error","swDevOffline"],"mappings":"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","file":"static/js/main.b9326b39.chunk.js","sourcesContent":["// types\nimport {PropsAction,trasectiommap} from './../Types/Types'\n\nexport function Reducer(state: [], action: PropsAction) {\n\n    switch (action.type) {\n        case 'ADD':\n            return [action.payload, ...state]\n        case 'DEL':\n            return state.filter((stateObj: trasectiommap) => stateObj.id !== action.payload);\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react'\nimport { Reducer } from './Reducer'\n\n//types\nimport {ContextProps} from './../Types/Types'\n\nconst trasections: object[] = [\n]\n\n\nexport const Contextdata = React.createContext<object[]|any>(trasections)\n\nconst ContextProvider = ({ children }: ContextProps) => {\n\n    let [state, dispatch] = useReducer<any>(Reducer, trasections)\n\n\n    return (\n        <Contextdata.Provider value={\n            {state,dispatch}\n        }>\n            {children}\n        </Contextdata.Provider>\n    )\n}\nexport default ContextProvider","import React, { useContext} from 'react'\nimport CountUp from 'react-countup';\n\n//import Context\nimport { Contextdata } from './../GlobalContext/Contextdata'\n\n//import type\nimport {trasectiommap} from './../Types/Types'\n\nexport const MainBalance = () => {\n    const { state } = useContext(Contextdata)\n    let amount= state.map((Obj: trasectiommap) => Obj.amount)\n    let balance: number = amount.reduce((total: number, items: number) => (total + items), 0).toFixed(2);\n  \n    return (\n        <div className='mainblance'>\n            <div className='mainbalanceheaing'>Your Balance</div>\n            <div className='mainbalancevalue'><CountUp separator=',' end={balance}/> PKR</div>\n        </div>\n    )\n}\n","import React, { useContext} from 'react'\nimport CountUp from 'react-countup';\n\n//import Context\nimport { Contextdata } from './../GlobalContext/Contextdata'\n\nimport {trasectiommap} from './../Types/Types'\nexport const Incomeexpencebal = () => {\n   \n    const { state } = useContext(Contextdata)\n   \n    let income=state.filter((incObj:trasectiommap)=> (incObj.amount>0))\n    let expence=state.filter((incObj:trasectiommap)=> (incObj.amount<0))\n\n    let totalincome=income.map((Obj: trasectiommap) => Obj.amount)\n    let totalexpence=expence.map((Obj: trasectiommap) => Obj.amount)\n    \n    let incomebal:number=totalincome.reduce((total: number, items: number) => (total + items), 0).toFixed(2);\n    let expencebal:number=totalexpence.reduce((total: number, items: number) => (total + items), 0).toFixed(2);\n    \n    return (\n        <div className='incomeexpenxe'>\n            <div className='income'>\n                <div>Income</div>\n                <div className='incomevalue'><CountUp separator=',' end={incomebal}/> PKR</div>\n            </div>\n            <div className='expence'>\n                <div>Expenxe</div>\n                <div className='expenxevalue'><CountUp separator=',' end={expencebal}/> PKR</div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext,useState,useRef,useEffect} from 'react'\nimport {Contextdata} from './../GlobalContext/Contextdata'\nimport ListIcon from '@material-ui/icons/List';\n\n\nexport const Newtrasection = () => {\n\n    const  element=useRef<HTMLInputElement>(null);\n    useEffect(()=>{\n        async function focus(){\n            if (null !== element.current) {\n            element.current.focus();\n            }\n        }\n        focus();\n    },[])\n\n    var expence:number=0;    \n    const [text, setText] = useState<string>('')\n    const [amount, setAmount] = useState <string>('')\n\n    const {dispatch}=useContext(Contextdata);\n\n    function addTransaction(transaction:object){\n        dispatch({\n            type:'ADD',\n            payload:transaction\n        });\n    }\n\n    function  Submit(e:React.FormEvent<HTMLFormElement>){\n        e.preventDefault();\n        const newTra:object=expence===0?\n        {\n            id: (Math.random() * 1000000000).toFixed(0),\n            text,\n            amount:  Math.abs(parseInt(amount)) \n        }:\n        {\n            id: (Math.random() * 1000000000).toFixed(0),\n            text,\n            amount: -Math.abs(parseInt(amount))\n        }\n        addTransaction(newTra)\n        expence=0;\n        setText('')\n        setAmount('');\n    }\n\n    function updateText(e:React.ChangeEvent<HTMLInputElement>){\n        setText(e.currentTarget.value)\n    }\n    function updateAmount(e:React.ChangeEvent<HTMLInputElement>){\n        setAmount( e.currentTarget.value  )\n    }\n    return (\n        <div className='newTrasection'>\n            <div  className='newtrasextionheading'><ListIcon/> Add new transaction</div>\n            <hr/>\n            <form action=\"\" className='NewTrasectionform' onSubmit={Submit}>\n                <input className='inputfields'  ref={element} value={text} onChange={updateText} type=\"text\" required placeholder='Enter Text...'/>\n                <input className='inputfields' value={amount} onChange={updateAmount} type=\"number\" required placeholder='Enter Amount...'/>\n                <div className='NewTrasectionsbtn'>\n                    <button className='incomebtn'  onClick={() => (expence = 0)}>Income</button>\n                    <button className='expenxebtn'  onClick={() => (expence = 1)}>Expenxe</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport HistoryIcon from '@material-ui/icons/History';\n//Components\nimport { Contextdata } from './../GlobalContext/Contextdata'\n\n//types\nimport { trasectiommap } from './../Types/Types'\nexport const Trasections = () => {\n\n    const { state } = useContext(Contextdata)\n    const { dispatch } = useContext(Contextdata);\n\n\n    function DeleteTrasection(event: number) {\n\n        dispatch({\n            type: 'DEL',\n            payload: event,\n        });\n\n    }\n    var today:Date = new Date(),\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    return (\n        <div>\n\n            <div className='trasextionheading'><HistoryIcon /> History</div>\n\n            <hr />\n\n            <ul>\n                {\n                    state.map((traObj: trasectiommap, ind: number) => {\n                        return (\n                            <li key={ind} className='trasection'>\n                                <div className='trasectiondel'>\n                                    {traObj.text}\n                                    <br/>\n                                   <span className='date'> {date} </span>\n                                </div>\n                                <div>{traObj.amount} PKR \n                                <button\n                                        onClick={() => (DeleteTrasection(traObj.id))}\n                                        className='deleted'\n                                    >\n                                        X\n                                    </button>\n                                </div>\n                            </li>)\n                    })\n                }\n            </ul>\n\n        </div>\n    )\n}\n","//yarn add firebase\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBJ23FuYUAR8u2eHHgjpm1VzIkU1lnn4y4\",\n  authDomain: \"expenxeapptypescript.firebaseapp.com\",\n  databaseURL: \"https://expenxeapptypescript.firebaseio.com\",\n  projectId: \"expenxeapptypescript\",\n  storageBucket: \"expenxeapptypescript.appspot.com\",\n  messagingSenderId: \"185319951445\",\n  appId: \"1:185319951445:web:354922dd6d84258fd618dc\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst messaging = firebase.messaging();\n\nexport function FirebaseNotification() {\n  Notification.requestPermission().then((permission) => {\n    console.log(permission)\n    if (permission === \"granted\") {\n      messaging.getToken().then((currentToken) => {\n        if (currentToken) {\n          console.log(\"TOKEN\")\n          console.log(currentToken);\n          prompt('Token',currentToken)\n        } else {\n          console.log('No Instance ID token available. Request permission to generate one.');\n\n        }\n      }).catch((err) => {\n        console.log('An error occurred while retrieving token. ', err);\n      });\n    }\n  })\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { FirebaseNotification } from './Servises/FirebaseNotification';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    btn:{\n        fontWeight: 'bolder',\n        fontSize: '15px'\n    }\n}));\n\nexport const Notification = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Button\n                className={classes.btn}\n                onClick={FirebaseNotification}\n                variant=\"outlined\" color=\"primary\">\n                Allow Notifications?\n            </Button>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\n\n//Components\nimport { MainBalance } from './Components/MainBalance'\nimport { Incomeexpencebal } from './Components/Incomeexpencebal';\nimport { Newtrasection } from './Components/Newtrasection';\nimport { Trasections } from './Components/Trasections';\nimport {Notification } from './Components/Notification'\n\n//Context\nimport ContextProvider from './GlobalContext/Contextdata'\n\nfunction App() {\n  return (\n    <div>\n      <ContextProvider>\n        <div className=\"MainContainer\">\n          <MainBalance />\n          <Incomeexpencebal />\n          <Trasections />\n          <Newtrasection />\n          <Notification/>\n        </div>\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport swDevOffline from './Components/Servises/SwDevOffline';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nswDevOffline();\n","export default function SwDevOffline() {\n    let swDev = `${process.env.PUBLIC_URL}/sw.js`;\n    navigator.serviceWorker.register(swDev).then((result) => {\n        console.log('result', result);\n    }).catch((error) => {\n        console.log('error', error)\n    })\n\n}"],"sourceRoot":""}